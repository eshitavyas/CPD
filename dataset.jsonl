{"instruction":"What is the worst-case number of arithmetic operations performed by recursive binary search on a sorted array of size n?","context":"Array","response":"?(log (n))","category":"DSA"}
{"instruction":"Let P be an array containing n integers. Let t be the lowest upper bound on the number of comparisons of the array elements, required to find the minimum and maximum values in an arbitrary array of n elements. Which one of the following choices is correct?","context":"Array","response":"t > n and t ? 3? ?","category":"DSA"}
{"instruction":"If an array A contains the items 10, 4, 7, 23, 67, 12 and 5 in that order, what will be the resultant array A after third pass of insertion sort?","context":"Array","response":"4,7,10,23,67,12,5","category":"DSA"}
{"instruction":"Consider a 2-dimensional array x with 10 rows and 4 columns, with each element storing a value equivalent to the product of row number and column number. The array is stored in row-major format. If the first element x[0][0] occupies the memory location with address 1000 and each element occupies only one memory location, which all locations (in decimal) will be holding a value of 10?","context":"Array","response":"1017, 1036","category":"DSA"}
{"instruction":"Let A be an array of 31 numbers consisting of sequence of 0's followed by a sequence of 1's. The problem is to find the smallest index i that A[i] is 1 by probing the minimum numbers of locations in A. The worst case number of probes performed by an optimal algorithm is _____________.","context":"Array","response":"5","category":"DSA"}
{"instruction":"The average number of key comparisons required for a successful search for sequential search on n items is","context":"Array","response":"n+1/2","category":"DSA"}
{"instruction":"A frame buffer array is addressed in row major order for a monitor with pixel locations starting from (0,0) and ending with (100,100). What is address of the pixel(6,10)? Assume one bit storage per pixel and starting pixel location is at 0.","context":"Array","response":"1016","category":"DSA"}
{"instruction":"Suppose there are 11 items in sorted order in an array. How many searches are required on the average, if binary search is employed and all searches are successful in finding the item?","context":"Array","response":"3","category":"DSA"}
{"instruction":"In an array of 2N elements that is both 2-ordered and 3-ordered, what is the maximum number of positions that an element can be from its position if the array were 1-ordered?","context":"Array","response":"1","category":"DSA"}
{"instruction":"Let A(1:8, -5:5, -10:5) be a three dimensional array. How many elements are there in the array A?","context":"Array","response":"1408","category":"DSA"}
{"instruction":"A one dimensional array A has indices 1....75. Each element is a string and takes up three memory words. The array is stored at location 1120 decimal. The starting address of A[49] is","context":"Link list","response":"1264","category":"DSA"}
{"instruction":"The minimum number of comparisons required to determine if an integer appears more than n/2 times in a sorted array of n integers is","context":"Link list","response":"?(log (n))","category":"DSA"}
{"instruction":"An array of n numbers is given, where n is an even number. The maximum as well as the minimum of these n numbers needs to be determined. Which of the following is TRUE about the number of comparisons needed?","context":"Link list","response":"At most 1.5n - 2 comparisons are needed.","category":"DSA"}
{"instruction":"Let SLLdel be a function that deletes a node in a singly-linked list given a pointer to the node and a pointer to the head of the list. Similarly, let DLLdel be another function that deletes a node in a doubly-linked list given a pointer to the node and a pointer to the head of the list. Let n denote the number of nodes in each of the linked lists. Which one of the following choices is TRUE about the worst-case time complexity of SLLdel and DLLdel?","context":"Link list","response":"SLLdel is O(n) and DLLdel is O(1)","category":"DSA"}
{"instruction":"What is the worst case time complexity of inserting n elements into an empty linked list, if the linked list needs to be maintained in sorted order?","context":"Link list","response":"?(n ) 2","category":"DSA"}
{"instruction":"Consider a singly linked list of the form where F is a pointer to the first element in the linked list and L is the pointer to the last element in the list. The time of which of the following operations depends on the length of the list?","context":"Link list","response":"Delete the last element of the list","category":"DSA"}
{"instruction":"In a doubly linked list the number of pointers affected for an insertion operation will be","context":"Link list","response":"Depends on the nodes of doubly linked list","category":"DSA"}
{"instruction":"Given two statements a)Insertion of an element should be done at the last node of the circular list b)Deletion of an element should be done at the last node of the circular list","context":"stack","response":"Both are false","category":"DSA"}
{"instruction":"An unordered list contains n distinct elements. The number of comparisons to find an element in this list that is neither maximum nor minimum is","context":"stack","response":"?(1)","category":"DSA"}
{"instruction":"An algorithm performs find operations, insert operations, delete operations, and decrease-key operations on a set of data items with keys drawn from a linearly ordered set. For a delete operation, a pointer is provided to the record that must be deleted. For the decrease-key operation, a pointer is provided to the record that has its key decreased. Which one of the following data structures is the most suited for the algorithm to use, if the goal is to achieve the best total asymptotic complexity considering all the operations?","context":"stack","response":"Unsorted array","category":"DSA"}
{"instruction":"Consider a single linked list where F and L are pointers to the first and last elements respectively of the linked list. The time for performing which of the given operations depends on the length of the linked list?","context":"stack","response":"Delete the last element of the list","category":"DSA"}
{"instruction":"Consider the following sequence of operations on an empty stack. push(54); push(52); pop(); push(55); push(62); s=pop(); Consider the following sequence of operations on an empty queue. enqueue(21); enqueue(24); dequeue(); enqueue(28); enqueue(32); q=dequeue(); The value of s+q is ___________.","context":"stack","response":"86","category":"DSA"}
{"instruction":"Convert the pre-fix expression to in-fix  ?? + ABC ? ? DE + FG","context":"stack","response":"(((A + B) ? C) ? ((D ? E) ? (F + G)))","category":"DSA"}
{"instruction":"Choose the equivalent prefix form of the following expression (a + (b ? c)) ?((d ? e)/(f + g ? h))","context":"stack","response":"? + a ? bc/ ? de ? +fgh","category":"DSA"}
{"instruction":"The best data structure to check whether an arithmetic expression has balanced parenthesis is a:","context":"stack","response":"Stack","category":"DSA"}
{"instruction":"The following postfix expression with single digit operands is evaluated using a stack: 8 2 3 ^/ 2 3 ? +5 1 ? ? Note that* is the exponentiation operator. The top two elements of the stack after the first * is evaluated are","context":"stack","response":"6,1","category":"DSA"}
{"instruction":"If the sequence of operations - push (1), push (2), pop, push (1), push (2), pop, pop, pop, push (2), pop are performed on a stack, the sequence of popped out values","context":"stack","response":"2,2,1,1,2","category":"DSA"}
{"instruction":"The result evaluating the postfix expression 10 5 + 60 6 / * 8 - is","context":"stack","response":"142","category":"DSA"}
{"instruction":"The five items: A, B, C, D, and E are pushed in a stack, one after other starting from A. The stack is popped four items and each element is inserted in a queue. The two elements are deleted from the queue and pushed back on the stack. Now one item is popped from the stack. The popped item is","context":"stack","response":"D","category":"DSA"}
{"instruction":"Suppose a stack implementation supports an instruction REVERSE, which reverses the order of elements on the stack, in addition to the PUSH and POP instructions. Which one of the following statements is TRUE with respect to this modified stack?","context":"queue","response":"A queue can be implemented where ENQUEUE takes a sequence of three instructions and DEQUEUE takes a single instruction","category":"DSA"}
{"instruction":"The expression 1 ? 2 ? 3 ? 4 ? 5 ? 6  will be evaluated as","context":"queue","response":"49152","category":"DSA"}
{"instruction":"The five items: A, B, C, D, and E are pushed in a stack, one after other starting from A. The stack is popped four items and each element is inserted in a queue. The two elements are deleted from the queue and pushed back on the stack. Now one item is popped from the stack. The popped item is","context":"queue","response":"D","category":"DSA"}
{"instruction":"The infix expression A + (B ? C) ?D is correctly represented in prefix notation as","context":"queue","response":"+A ? ?BCD","category":"DSA"}
{"instruction":"Assume that the operators +,-,x are left associative and* is right associative. The order of precedence (from highest to lowest) is *,x,+,- .  The postfix expression corresponding to the infix expression  a + b × c ? d ^e ^ f","context":"queue","response":"abc × +def ^^?","category":"DSA"}
{"instruction":"Consider a sequence of elements a0=1,a1=5,a2=7,a3=8,a4=9 &a5=2 . The following operations are performed on a stack S and a queue Q, both of which are initially empty. I: push the elements of a from a0 to a5 in that order into S . II: enqueue the elements of a from a0 to a5 in that order into Q . III: pop an element from S. IV: dequeue an element from Q . V: pop an element from S . VI: dequeue an element from Q . VII: dequeue an element from Q and push the same element into S . VIII: Repeat operation VII three times. IX: pop an element from S . X: pop an element fromS . The top element of S after executing the above operations is ___.","context":"queue","response":"8","category":"DSA"}
{"instruction":"Consider the queues Q1 containing four elements and Q2 containing none (shown as the Initial State in the figure). The only operations allowed on these two queues are and Enqueue(Q,element) and Dequeue(Q) . The minimum number of operations on Q1 required to place the elements of Q1 in Q2 in reverse order (shown as the Final State in the figure) without using any additional storage is","context":"queue","response":"0","category":"DSA"}
{"instruction":"A queue is implemented using a non-circular singly linked list. The queue has a head pointer and a tail pointer, as shown in the figure. Let n denote the number of nodes in the queue. Let enqueue be implemented by inserting a new node at the head, and dequeue be implemented by deletion of a node from the tail.Which one of the following is the time complexity of the most time-efficient implementation of enqueue and dequeue, respectively,\nfor this data structure?","context":"queue","response":"?(1), ?(n)","category":"DSA"}
{"instruction":"Which of the following data structure is useful in traversing a given graph by breadth first search?","context":"queue","response":"Queue","category":"DSA"}
{"instruction":"A circular queue has been implemented using a single linked list where each node consists of a value and a single pointer pointing to the next node. We maintain exactly two external pointers FRONT and REAR pointing to the front node and the rear node of the queue, respectively. Which of the following statements is/are CORRECT for such a circular queue, so that insertion and deletion operation can be performed in O (1) time ?I. Next pointer of front node points to the rear node.\nII. Next pointer of rear node points to the front node.","context":"queue","response":"II only","category":"DSA"}
{"instruction":"A queue is implemented using an array such that ENQUEUE and DEQUEUE operations are performed efficiently. Which one of the following statements is CORRECT (n refers to the number of items in the queue)?","context":"queue","response":"Both operations can be performed in O(1) time","category":"DSA"}
{"instruction":"The queue data structure is to be realized by using stack. The number of stacks needed would be","context":"binary tree","response":"2 stacks","category":"DSA"}
{"instruction":"Consider a standard Circular Queue implementation (which has the same condition for Queue Full and Queue Empty) whose size is 11 and the elements of the queue are q[0],q[1],... q[10]. The front and rear pointers are initialized to point at q[2]. In which position will the ninth element be added?","context":"binary tree","response":"q[0]","category":"DSA"}
{"instruction":"Suppose a circular queue of capacity (n-1) elements is implemented with an array of n elements. Assume that the insertion and deletion operations are carried out using REAR and FRONT as array index variables, respectively. Initially, REAR = FRONT = 0. The conditions to detect queue full and queue empty are","context":"binary tree","response":"full: (REAR+1) mod n == FRONT empty: REAR == FRONT","category":"DSA"}
{"instruction":"Suppose you are given an implementation of a queue of integers. The operations that can be performed on the queue are: . isEmpty(Q) returns true if the queue is empty, false otherwise.\nii. delete(Q) deletes the element at the front of the queue and returns its value.\niii. insert(Q,i) inserts the integer i at the rear of the queue.\nConsider the following function void f (queue Q) {\nint i ;\nif (!isEmpty(Q)) {\n i = delete(Q);\n f(Q);\n insert(Q, i);\n }\n}","context":"binary tree","response":"Reverses the order of the elements in the queue Q","category":"DSA"}
{"instruction":"An implementation of a queue Q, using two stacks S1 and S2, is given below:void insert(Q,x){\n push (S1,x);\n}\nvoid delete(Q, x){\n if (stack-empty (S2))then\n if (stack-empty (S1))then{\n print(\"Q is empty\");\n return;\n }\n else while (! (stack-empty)(S1)){\n x=pop(S1);\n push(S2,x);\n }\n x=pop(S2);\n} Let n insert and m( n) delete operations be performed in an arbitrary on an empty\nqueue Q, Let x and y be the number of push and pop operations performed respectively\nin the processes. Which one of the following is true for all m and n ?","context":"binary tree","response":"m + n ? x ? 2n 2m ? y ? n + m","category":"DSA"}
{"instruction":"A priority queue Q is used to implement a stack that stores characters. PUSH (C) is implemented as INSERT (Q,C,K) where K is an appropriate integer key chosen by the implementation. POP is implemented as DELETEMIN (Q). For a sequence of operations, the keys chosen are in","context":"binary tree","response":"strictly decreasing order","category":"DSA"}
{"instruction":"Consider the following statements: (i). First-in-first out types of computations are efficiently supported by STACKS.(ii). Implementing LISTS on linked lists is more efficient than implementing LISTS on an\narray for almost all the basic LIST operations.\n(iii). Implementing QUEUES on a circular array is more efficient than implementing\nQUEUES on a linear array with two indices.\n(iv). Last-in-first-out type of computations are efficiently supported by QUEUES.","context":"binary tree","response":"(ii) and (iii) are true","category":"DSA"}
{"instruction":"Consider a complete binary tree with 7 nodes. Let A denote the set of first 3 elements obtained by performing Breadth-First Search (BFS) starting from the root. Let B denote the set of first 3 elements obtained by performing Depth-First Search (DFS) starting from the root. The value of |A-B| is _____________","context":"binary tree","response":"1","category":"DSA"}
{"instruction":"The post-order traversal of binary tree is ACEDBHIGF. The pre-order traversal is","context":"binary tree","response":"F B A D C E G I H","category":"DSA"}
{"instruction":"Let T be a full binary tree with 8 leaves. (A full binary tree has every level full.) Suppose two leaves a and b of T are chosen uniformly and independently at random. The expected value of the distance between a and b in T (i.e., the number of edges in the unique path between a and b) is (rounded off to 2 decimal places) ___________ .","context":"binary tree","response":"4.25","category":"DSA"}
{"instruction":"The postorder traversal of a binary tree is 8,9,6,7,4,5,2,3,1. The inorder traversal of the same tree is 8,6,9,4,7,2,5,1,3. The height of a tree is the length of the longest path from the root to any leaf. The height of the binary tree above is ______.","context":"binary search tree","response":"4","category":"DSA"}
{"instruction":"A complete binary tree with n non-leaf nodes contains","context":"binary search tree","response":"2n+1 nodes","category":"DSA"}
{"instruction":"Consider the following New-order strategy for traversing a binary tree: Visit the root; Visit the right sub tree using New-order; Visit the left sub tree using New-order; The New-order traversal of the expression tree corresponding to the reverse polish expression 3 4 * 5 - 2 ^ 6 7 * 1 + - is given by:","context":"binary search tree","response":"-5792","category":"DSA"}
{"instruction":"Consider a binary tree T that has 200 leaf nodes. Then, the number of nodes in T that have exactly two children are ________.","context":"binary search tree","response":"199","category":"DSA"}
{"instruction":"A binary tree T has 20 leaves. The number of nodes in T having two children is _______.","context":"binary search tree","response":"19","category":"DSA"}
{"instruction":"The height of a tree is the length of the longest root-to-leaf path in it. The maximum and minimum number of nodes in a binary tree of height 5 are","context":"binary search tree","response":"63 and 6, respectively","category":"DSA"}
{"instruction":"How many different trees are there with four nodes A,B,C and D?","context":"binary search tree","response":"120","category":"DSA"}
{"instruction":"Suppose a binary search tree with 1000 distinct elements is also a complete binary tree. The tree is stored using the array representation of binary heap trees. Assuming that the array indices start with 0, the 3rd largest element of the tree is stored at index _______.","context":"binary search tree","response":"509","category":"DSA"}
{"instruction":"A binary search tree T contains n distinct elements. What is the time complexity of picking an element in T that is smaller than the maximum element in T?","context":"binary search tree","response":"?(1)","category":"DSA"}
{"instruction":"The preorder traversal of a binary search tree is 15,10,12,11,20,18,16,19. Which one of the following is the postorder traversal of the tree?","context":"binary search tree","response":"11,12,10,16,19,18,20,15","category":"DSA"}
{"instruction":"The pre-order transversal of a binary search tree is given by 12, 8, 6, 2, 7, 9, 10, 16, 15, 19, 17, 20. Then the post-order traversal of this tree is:","context":"binary search tree","response":"2,7,6,10,9,8,15,17,20,19,16,12","category":"DSA"}
{"instruction":"Let T be a binary search tree with 15 nodes. The minimum and maximum possible heights of T are : Note: The height of a tree with a single node is 0.","context":"binary search tree","response":"3 and 14 respectively","category":"DSA"}
{"instruction":"The number of ways in which the numbers 1,2,3,4,5,6,7 can be inserted in an empty binary search tree, such that the resulting tree has height 6, is _____.Note: The height of a tree with a single node is 0.","context":"binary search tree","response":"64","category":"DSA"}
{"instruction":"While inserting the elements 71, 65, 84, 69, 67, 83 in an empty binary search tree (BST) in the sequence shown, the element in the lowest level is","context":"binary search tree","response":"67","category":"DSA"}
{"instruction":"What are the worst-case complexities of insertion and deletion of a key in a binary search tree?","context":"binary search tree","response":"?(n) for both insertion and deletion","category":"DSA"}
{"instruction":"Which of the following is/are correct inorder traversal sequence(s) of binary search tree(s)? I. 3, 5, 7, 8, 15, 19, 25 II. 5, 8, 9, 12, 10, 15, 25 III. 2, 7, 10, 8, 14, 16, 20 IV. 4, 6, 7, 9 18, 20, 25","context":"binary search tree","response":"I and IV only","category":"DSA"}
{"instruction":"The preorder traversal sequence of a binary search tree is 30, 20, 10, 15, 25, 23, 39, 35, 42. Which one of the following is the postorder traversal sequence of the same tree?","context":"binary search tree","response":"15, 10, 23, 25, 20, 35, 42, 39, 30","category":"DSA"}
{"instruction":"Which one of the following is the tightest upper bound that represents the time complexity of inserting an object into a binary search tree of n nodes?","context":"binary search tree","response":"O(n)","category":"DSA"}
{"instruction":"The average depth of a binary search tree is","context":"binary search tree","response":"O(log n)","category":"DSA"}
{"instruction":"How many distinct binary search trees can be created out of 4 distinct keys?","context":"binary search tree","response":"14","category":"DSA"}
{"instruction":"The minimum height of an AVL tree with n nodes is","context":"binary search tree","response":"Floor (log2(n + 1))","category":"DSA"}
{"instruction":"In a balanced binary search tree with n elements, what is the worst case time complexity of reporting all elements in range [a,b]? Assume that the number of reported elements is k","context":"binary search tree","response":"?(log n + k)","category":"DSA"}
{"instruction":"What is the worst case time complexity of inserting elements into an AVL-tree with n elements initially?","context":"binary search tree","response":"?(n log n)","category":"DSA"}
{"instruction":"Access time of the symbolic table will be logarithmic if it is implemented by","context":"binary search tree","response":"Search tree","category":"DSA"}
{"instruction":"Suppose we have a balanced binary search tree T holding n numbers. We are given two numbers L and H and wish to sum up all the numbers in T that lie between L and H. Suppose there are m such numbers in T. If the tightest upper bound on the time to compute the sum is O(n\na\nlog\nbn + m log n) , the value of a + 10b + 100c + 1000d is _______.","context":"binary search tree","response":"110","category":"DSA"}
{"instruction":"The number of rotations required to insert a sequence of elements 9, 6, 5, 8, 7, 10 into an empty AVL tree is?","context":"binary search tree","response":"3","category":"DSA"}
{"instruction":"The worst case running time to search for an element in a balanced binary search tree with n2^n elements is","context":"binary search tree","response":"?(n)","category":"DSA"}
{"instruction":"What is the maximum height of any AVL-tree with 7 nodes? Assume that the height of a tree with a single node is 0","context":"Avl tree","response":"3","category":"DSA"}
{"instruction":"A program takes as input a balanced binary search tree with n leaf nodes and computes the value of a function g(x) for each node x. If the cost of computing g(x) is min{no. of leaf-nodes in left-subtree of x, no. of leaf-nodes in right-subtree of x} then the worst-case time complexity of the program is","context":"Avl tree","response":"?(nlogn)","category":"DSA"}
{"instruction":"A weight-balanced tree is a binary tree in which for each node, the number of nodes in the let sub tree is at least half and at most twice the number of nodes in the right sub tree. The maximum possible height (number of nodes on the path from the root to the furthest leaf) of such a tree on n nodes is best described by which of the following ?","context":"Avl tree","response":"log3/2n","category":"DSA"}
{"instruction":"If a node has K children in B tree, then the node contains exactly _____ keys.","context":"Avl tree","response":"K ? 1","category":"DSA"}
{"instruction":"A B-tree of order 4 is built from scratch by 10 successive insertions. What is the maximum number of node splitting operations that may take place?","context":"Avl tree","response":"5","category":"DSA"}
{"instruction":"Choose the correct alternatives (more than one may be correct) and write the corresponding letters only:A 2-3 tree is such that\na. All internal nodes have either 2 or 3 children\nb. All paths from root to the leaves have the same length.\nThe number of internal nodes of a 2-3 tree having 9 leaves could be","context":"B tree","response":"4,7","category":"DSA"}
{"instruction":"B+ Trees are considered BALANCED because","context":"B tree","response":"the lengths of the paths from the root to all leaf nodes are all equal.","category":"DSA"}
{"instruction":"Consider a B+-tree in which the maximum number of keys in a node is 5. What is the minimum number of keys in any non-root node?","context":"B tree","response":"2","category":"DSA"}
{"instruction":"The following key values are inserted into a B+ tree in which order of the internal nodes is 3, and that of the leaf nodes is 2, in the sequence given below. The order of internal nodes is the maximum number of tree pointers in each node, and the order of leaf nodes is the maximum number of data items that can be stored in it. The B+ - tree is initially empty. 10, 3, 6, 8, 4, 2, 1 The maximum number of times leaf nodes would get split up as a result of these insertion is","context":"B tree","response":"4","category":"DSA"}
{"instruction":"Let A be a priority queue for maintaining a set of elements. Suppose A is implemented using a max-heap data structure. The operation Extract-Max(A) extracts and deletes the maximum element from A. The operation Insert(A,key) inserts a new element key in A. The properties of a max-heap are preserved at the end of each of these operations. When A contains n elements, which one of the following statements about the worst case running time of these two operations is TRUE?","context":"B tree","response":"Both Extract-Max(A) and Insert(A,key) run in O(log(n)).","category":"DSA"}
{"instruction":"Which one of the following sequences when stored in an array at locations A[1], . . . , A[10] forms a max-heap?","context":"B tree","response":"23, 17, 14, 7, 13, 10, 1, 5, 6, 12","category":"DSA"}
{"instruction":"Let H be a binary min-heap consisting of n elements implemented as an array. What is the worst case time complexity of an optimal algorithm to find the maximum element in H?","context":"B tree","response":"?(n)","category":"DSA"}
{"instruction":"Consider the array representation of a binary min-heap containing 1023 elements. The minimum number of comparisons required to find the maximum in the heap is ___________.","context":"B tree","response":"511","category":"DSA"}
{"instruction":"Consider the following statements: I. The smallest element in a max-heap is always at a leaf node. II. The second largest element in a max-heap is always a child of the root node. III. A max-heap can be constructed from a binary search tree in ?(n) time. IV. A binary search tree can be constructed from a max-heap in ?(n) time. Which of the above statements is/are TRUE?","context":"B tree","response":"I, II and III","category":"DSA"}
{"instruction":"Given a binary-max heap. The elements are stored in an arrays as 25,14,16,13,10,8,12. What is the content of the array after two delete operations?","context":"B tree","response":"14,13,12,8,10","category":"DSA"}
{"instruction":"The number of possible min-heaps containing each value from {1, 2, 3, 4, 5, 6, 7} exactly once is _____.","context":"B tree","response":"80","category":"DSA"}
{"instruction":"A complete binary min-heap is made by including each integer in [1,1023] exactly once. The depth of a node in the heap is the length of the path from the root of the heap to that node. Thus, the root is at depth 0. The maximum depth at which integer 9 can appear is_____. .","context":"B tree","response":"8","category":"DSA"}
{"instruction":"An operator delete(i) for a binary heap data structure is to be designed to delete the item in the i-th node.Assume that the heap is implemented in an array and i refers to the i-th index of thearray.If the heap tree has depth d (number of edges on the path from the root to the farthest leaf),the n what is the time complexity to re-fix the heap efficiently after the removal of the element?","context":"B tree","response":"O(d) but not O(1)","category":"DSA"}
{"instruction":"Consider the following array of elements. (89,19,50,17,12,15,2,5,7,11,6,9,100) The minimum number of interchanges needed to convert it into a max-heap is","context":"Heap Tree","response":"3","category":"DSA"}
{"instruction":"Consider a complete binary tree where the left and the right subtrees of the root are max-heaps. The lower bound for the number of operations to convert the tree to a heap is","context":"Heap Tree","response":"?(logn)","category":"DSA"}
{"instruction":"A priority queue is implemented as a Max-Heap. Initially, it has 5 elements. The levelorder traversal of the heap is: 10, 8, 5, 3, 2. Two new elements 1 and 7 are inserted into the heap in that order. The level-order traversal of the heap after the insertion of the elements is:","context":"Heap Tree","response":"10, 8, 7, 3, 2, 1, 5","category":"DSA"}
{"instruction":"A data structure is required for storing a set of integers such that each of the following operations can be done in O(log n)time, where n is the number of elements in the set. 1. Deletion of the smallest element 2. Insertion of an element if it is not already present in the set Which of the following data structures can be used for this purpose?","context":"Heap Tree","response":"A balanced binary search tree can be used but not a heap","category":"DSA"}
